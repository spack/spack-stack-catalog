spack:
  specs:
  - environment-modules@5.2.0
  - openmpi @4.1.5
  - slurm @23-02-7
  - hwloc @2.9.3
  - libevent @2.1.12
  - pmix @4.2.6
  - ucx @1.14.1
  - cuda@11.7
  - gcc @13.2.0 %gcc@11.3.0
  - gcc @7.5.0
  - gcc @5.5.0 %gcc@9.5.0
  - gcc @4.9.4 %gcc@9.5.0
  - intel-oneapi-compilers@2022.2.1
  - nvhpc@23.1
  - jdk@17.0.1
  - openjdk@16.0.2
  - openjdk@11.0.17_8
  - julia@1.8.5
  - julia@1.9.0
  - julia@1.9.2
  - julia@1.9.3
  view:
    generic:
      root: /share/apps/22.04/spack/environments/core/view
      select:
      - environment-modules
      exclude:
      - gcc
      link_type: symlink
  modules:
    prefix_inspections:
      lib64: [LD_LIBRARY_PATH]
      lib: [LD_LIBRARY_PATH]
    default:
      roots:
        tcl: $spack/../../modulefiles/spack/core/
      tcl:
        exclude:
        - environment-modules
        - zlib
        - gmp
        - perl
        include:
        - slurm
        - pmix
        - ucx
        - openmpi
        - cuda
        - gcc@13.2.0
        - gcc@7.5.0
        - gcc@5.5.0
        - gcc@4.9.4
        - intel-oneapi-compilers@2022.2.1
        - nvhpc
        - jdk
        - openjdk
        - julia
        projections:
          slurm: slurm/23.02.7
        slurm:
          template: hpccf/slurm.tcl
        gcc:
          filter:
            # Software compiled with system compilers (as of writing, gcc 11.3.0)
            # does NOT get RPATH for libstdc++; so if you updated LD_LIBRARY_PATH for gcc modules,
            # it breaks module-loaded software that was compiled with a system gcc of a newer version
            # than the module-loaded gcc.
            exclude_env_vars:
              - LD_LIBRARY_PATH
  concretizer:
    unify: when_possible
