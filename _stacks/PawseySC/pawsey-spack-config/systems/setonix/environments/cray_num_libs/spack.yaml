spack:
# They are currently buildable,
# because cray-libsci and cray-fftw are not in use (see packages.yaml)
  packages:
    'fftw-api:':
      buildable: true
  definitions:
  - parallel:
    
    # boost: might need several boosts with different stadards
    # spack/0.19.0 offers only up to boost@1.80.0
    - boost@1.83.0 +mpi +numpy +python cxxstd=14
    - boost@1.83.0 +mpi +numpy +python cxxstd=98
    - hpx@1.9.1 +async_mpi malloc=jemalloc max_cpu_count=128 networking=mpi 
      build_type=Release ^boost ^netlib-lapack@3.11.0 
    
    # rather silly kokkos has std=98,11, etc setting cxxstd. BUT all other packages 
    # use the flag cxxstd ... Update in recipes might fix this but for the moment, we fix 
    # this in our repo
    # cxxstd=14 is not a variant in kokkos@3.7.02
    - kokkos@4.1.00 +hwloc +memkind +numactl +openmp +tuning build_type=Release
    
    # - kokkos@3.4.01 +hwloc +memkind +numactl +openmp +rocm +tuning cxxstd=14 build_type=Release
    # for hpx must explicitly set openmp off 
    - kokkos@4.1.00 +hwloc +memkind +numactl +hpx +hpx_async_dispatch +tuning ~openmp
      build_type=Release ^hpx@1.9.1 +async_mpi max_cpu_count=128 networking=mpi build_type=Release
  # because of odd concretization of packages with python dependences defaulting to 3.9.9 and not the 
  # version specified in the packages.yaml, separate packages between those with python dep and those without
  - numerical-with-python:
    
    #- plasma@22.9.29 build_type=Release ^openblas  #plasma conflicts with cce compiler
    
    - slate@2023.11.05 +rocm amdgpu_target=gfx90a build_type=Release 
    - plumed@2.9.0
    
    # some heavier numerical library builds 
    - opencv@4.8.0 build_type=Release
    
      #    - opencv@3.4.18 build_type=Release
    - trilinos@15.0.0 +adios2 +openmp +python ~cuda ^adios2@2.9.2 build_type=Release
      ^hdf5@1.14.3 build_type=Release
  - petsc-set:    
    - petsc@3.20.1
  - numerical:
    
    - netlib-lapack@3.11.0 build_type=Release
    - netlib-scalapack@2.2.0
    - blaspp@2023.08.25 ~cuda build_type=Release #^openblas  # openblas fails with cce compiler
    - eigen@3.4.0 build_type=Release # charris: build ok on Joey 2021-12-16
    - fftw@2.1.5 +openmp precision=float,double # fftw 2 does not support long doubles
    - fftw@3.3.10 +openmp precision=float,double,long_double
    - gsl@2.7.1
  - amd-with-python:
    
    # AMD AOCL
    - amdblis@3.0 threads=openmp
    - amdblis@3.0
    
    # variant below useful for at least one PaCER
    - amdlibflame@3.0
    - amdscalapack@3.0 build_type=Release
    - aocl-sparse@3.0 build_type=Release
  - amd:
    - amdfftw@3.0 precision=float,double,long_double
  specs:
  - matrix:
    - [$parallel]
    - ['%cce@16.0.1']
    - [^python@3.11.6]
    - [target=zen3]
  - matrix:
    - [$petsc-set]
    - ['%cce@16.0.1']
    - [^python@3.11.6 ^fftw@3.3.10 ^netlib-lapack@3.11.0]
    - [~complex] #+complex is throwing this error: unknown type name '__complex128'
    - [+fftw ~trilinos +hwloc +openmp ~cuda]
    - [target=zen3]      
  - matrix:
    - [$numerical]
    - ['%cce@16.0.1']
    - [target=zen3]
  - matrix:
    - [$numerical-with-python]
    - ['%cce@16.0.1']
    - [^python@3.11.6 +optimizations+zlib]
    - [target=zen3]
# for now don't build amd math libraries
  #- matrix:
  #  - [$amd]
  #  - ['%gcc@12.2.0', '%cce@16.0.1', '%aocc@3.2.0']
  #  - [target=zen3]
  #- matrix:
  #  - [$amd-with-python]
  #  - ['%gcc@12.2.0', '%cce@16.0.1', '%aocc@3.2.0']
  #  - [^python@3.11.6]
  #  - [target=zen3]
  view: false
