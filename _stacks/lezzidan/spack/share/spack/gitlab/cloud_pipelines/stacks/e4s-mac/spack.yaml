spack:
  view: false

  concretizer:
    reuse: false
    unify: false

  config:
    concretizer: clingo
    install_tree:
      root: $SPACK_ROOT/opt/spack
      padded_length: 512
      projections:
        all: '{architecture}/{compiler.name}-{compiler.version}/{name}-{version}-{hash}'

  packages:
    all:
      compiler: [apple-clang@13.1.6]
      target: [m1]

  definitions:
  - easy_specs:
    - berkeley-db
    - ncurses
    - gcc
    - py-jupyterlab
    - py-scipy
    - py-matplotlib
    - py-pandas

  - arch:
    - '%apple-clang@13.1.6 target=m1'

  specs:

  - matrix:
    - - $easy_specs
    - - $arch

  mirrors: { "mirror": "s3://spack-binaries/develop/e4s-mac" }

  gitlab-ci:

    script:
      - tmp="$(mktemp -d)"; export SPACK_USER_CONFIG_PATH="$tmp"; export SPACK_USER_CACHE_PATH="$tmp"
      - . "./share/spack/setup-env.sh"
      - spack --version
      - spack arch
      - cd ${SPACK_CONCRETE_ENV_DIR}
      - spack env activate --without-view .
      - spack config add "config:install_tree:projections:${SPACK_JOB_SPEC_PKG_NAME}:'morepadding/{architecture}/{compiler.name}-{compiler.version}/{name}-{version}-{hash}'"
      - mkdir -p ${SPACK_ARTIFACTS_ROOT}/user_data
      - spack --color=always --backtrace ci rebuild > >(tee ${SPACK_ARTIFACTS_ROOT}/user_data/pipeline_out.txt) 2> >(tee ${SPACK_ARTIFACTS_ROOT}/user_data/pipeline_err.txt >&2)

    match_behavior: first
    mappings:
      - match: ['os=monterey']
        runner-attributes:
          tags:
          - lambda

    broken-specs-url: "s3://spack-binaries/broken-specs"

    service-job-attributes:
      before_script:
      - export SPACK_USER_CACHE_PATH=$(pwd)/.spack-user-cache
      - export SPACK_USER_CONFIG_PATH=$(pwd)/.spack-user-config
      - . "./share/spack/setup-env.sh"
      - spack --version
      tags:
      - lambda

  cdash:
    build-group: E4S Mac
    url: https://cdash.spack.io
    project: Spack Testing
    site: Cloud Gitlab Infrastructure
